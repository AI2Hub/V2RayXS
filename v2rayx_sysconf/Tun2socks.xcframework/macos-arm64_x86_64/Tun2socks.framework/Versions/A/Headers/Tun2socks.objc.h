// Objective-C API for talking to github.com/tzmax/apple-gotun2socks-library/tun2socks Go package.
//   gobind -lang=objc github.com/tzmax/apple-gotun2socks-library/tun2socks
//
// File is generated by gobind. Do not edit.

#ifndef __Tun2socks_H__
#define __Tun2socks_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@protocol Tun2socksTun2socks;
@class Tun2socksTun2socks;
@protocol Tun2socksTunWriter;
@class Tun2socksTunWriter;

@protocol Tun2socksTun2socks <NSObject>
@end

@protocol Tun2socksTunWriter <NSObject>
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)write:(NSData* _Nullable)p0 n:(long* _Nullable)n error:(NSError* _Nullable* _Nullable)error;
@end

FOUNDATION_EXPORT const int64_t Tun2socksMTU;

/**
 * Tun2socksConnect reads packets from a TUN device and routes it to a socks5 server.
Returns an Tun2socks instance.

`tunName` is used to output packets to the TUN (VPN).
`socks5Proxy` socks5 proxy link.
`tunDns` TUN DNS address.
`isUDPEnabled` indicates whether the tunnel and/or network enable UDP proxying.

Sets an error if the tunnel fails to connect.
 */
FOUNDATION_EXPORT id<Tun2socksTun2socks> _Nullable Tun2socksConnect(NSString* _Nullable tunName, NSString* _Nullable socks5Proxy, NSString* _Nullable tunDns, BOOL isUDPEnabled, NSError* _Nullable* _Nullable error);

@class Tun2socksTun2socks;

@class Tun2socksTunWriter;

@interface Tun2socksTun2socks : NSObject <goSeqRefInterface, Tun2socksTun2socks> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
@end

/**
 * TunWriter is an interface that allows for outputting packets to the TUN (VPN).
 */
@interface Tun2socksTunWriter : NSObject <goSeqRefInterface, Tun2socksTunWriter> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)write:(NSData* _Nullable)p0 n:(long* _Nullable)n error:(NSError* _Nullable* _Nullable)error;
@end

#endif
